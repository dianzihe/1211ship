// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#include "behaviac/common/meta.h"
#include "behaviac/common/member.h"
#include "behaviac_agent_meta.h"

namespace behaviac
{
	class CInstanceConst_StructTest : public CInstanceConstBase<StructTest>
	{
		IInstanceMember* _a;

	public: 
		CInstanceConst_StructTest(const char* valueStr) : CInstanceConstBase<StructTest>(valueStr)
		{
			behaviac::vector<behaviac::string> paramStrs = behaviac::StringUtils::SplitTokensForStruct(valueStr);
			BEHAVIAC_ASSERT(paramStrs.size() == 1);

			_a = AgentMeta::TParseProperty<bool >(paramStrs[0].c_str());
		}

		~CInstanceConst_StructTest()
		{
			BEHAVIAC_DELETE _a;
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_a != NULL);

			_value.a = *(bool*)_a->GetValue(self, behaviac::Meta::IsVector<bool >::Result, behaviac::GetClassTypeNumberId<bool >());
		}
	};

	class CMethod_behaviac_Agent_VectorAdd : public CAgentMethodVoidBase
	{
		IInstanceMember* _param0;
		IInstanceMember* _param1;

	public: 
		CMethod_behaviac_Agent_VectorAdd() : _param0(0) , _param1(0) 
		{
		}

		CMethod_behaviac_Agent_VectorAdd(CMethod_behaviac_Agent_VectorAdd &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) , _param1(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorAdd()
		{
			BEHAVIAC_DELETE _param0;
			BEHAVIAC_DELETE _param1;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 2);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
			_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);
			BEHAVIAC_ASSERT(_param1 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
			behaviac::Agent::VectorAdd(pValue_param0, pValue_param1);
		}
	};

	class CMethod_behaviac_Agent_VectorClear : public CAgentMethodVoidBase
	{
		IInstanceMember* _param0;

	public: 
		CMethod_behaviac_Agent_VectorClear() : _param0(0) 
		{
		}

		CMethod_behaviac_Agent_VectorClear(CMethod_behaviac_Agent_VectorClear &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorClear()
		{
			BEHAVIAC_DELETE _param0;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 1);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			behaviac::Agent::VectorClear(pValue_param0);
		}
	};

	class CMethod_behaviac_Agent_VectorContains : public CAgentMethodBase<bool>
	{
		IInstanceMember* _param0;
		IInstanceMember* _param1;

	public: 
		CMethod_behaviac_Agent_VectorContains() : _param0(0) , _param1(0) 
		{
		}

		CMethod_behaviac_Agent_VectorContains(CMethod_behaviac_Agent_VectorContains &rhs) : CAgentMethodBase<bool>(rhs) , _param0(0) , _param1(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorContains()
		{
			BEHAVIAC_DELETE _param0;
			BEHAVIAC_DELETE _param1;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 2);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
			_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);
			BEHAVIAC_ASSERT(_param1 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
			_returnValue->value = behaviac::Agent::VectorContains(pValue_param0, pValue_param1);
		}
	};

	class CMethod_behaviac_Agent_VectorLength : public CAgentMethodBase<int>
	{
		IInstanceMember* _param0;

	public: 
		CMethod_behaviac_Agent_VectorLength() : _param0(0) 
		{
		}

		CMethod_behaviac_Agent_VectorLength(CMethod_behaviac_Agent_VectorLength &rhs) : CAgentMethodBase<int>(rhs) , _param0(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorLength()
		{
			BEHAVIAC_DELETE _param0;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 1);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			_returnValue->value = behaviac::Agent::VectorLength(pValue_param0);
		}
	};

	class CMethod_behaviac_Agent_VectorRemove : public CAgentMethodVoidBase
	{
		IInstanceMember* _param0;
		IInstanceMember* _param1;

	public: 
		CMethod_behaviac_Agent_VectorRemove() : _param0(0) , _param1(0) 
		{
		}

		CMethod_behaviac_Agent_VectorRemove(CMethod_behaviac_Agent_VectorRemove &rhs) : CAgentMethodVoidBase(rhs) , _param0(0) , _param1(0) 
		{
		}

		~CMethod_behaviac_Agent_VectorRemove()
		{
			BEHAVIAC_DELETE _param0;
			BEHAVIAC_DELETE _param1;
		}

		virtual IInstanceMember* clone()
		{
			return BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove(*this);
		}

		virtual void load(const char* instance, behaviac::vector<behaviac::string>& paramStrs)
		{
			BEHAVIAC_ASSERT(paramStrs.size() == 2);

			behaviac::StringUtils::StringCopySafe(kInstanceNameMax, _instance, instance);
			_param0 = AgentMeta::TParseProperty<IList >(paramStrs[0].c_str());
			_param1 = AgentMeta::TParseProperty<System::Object >(paramStrs[1].c_str());
		}

		virtual void run(Agent* self)
		{
			BEHAVIAC_ASSERT(_param0 != NULL);
			BEHAVIAC_ASSERT(_param1 != NULL);

			IList& pValue_param0 = *(IList*)_param0->GetValue(self, behaviac::Meta::IsVector<IList >::Result, behaviac::GetClassTypeNumberId<IList >());
			System::Object& pValue_param1 = *(System::Object*)_param1->GetValue(self, behaviac::Meta::IsVector<System::Object >::Result, behaviac::GetClassTypeNumberId<System::Object >());
			behaviac::Agent::VectorRemove(pValue_param0, pValue_param1);
		}
	};

	class BehaviorLoaderImplement : BehaviorLoader
	{
	public:
		BehaviorLoaderImplement()
		{
			AgentMeta::SetBehaviorLoader(this);
		}

		virtual ~BehaviorLoaderImplement()
		{
		}

		virtual bool load()
		{
			AgentMeta::SetTotalSignature(4236734098u);

			AgentMeta* meta = NULL;
			BEHAVIAC_UNUSED_VAR(meta);

			// StructTest
			meta = BEHAVIAC_NEW AgentMeta(2864333320u);
			AgentMeta::GetAgentMetas()[2798931971u] = meta;
			meta->RegisterMemberProperty(3049752432u, BEHAVIAC_NEW CMemberProperty< bool >("a", Set_StructTest_a, Get_StructTest_a));

			// behaviac::Agent
			meta = BEHAVIAC_NEW AgentMeta(24743406u);
			AgentMeta::GetAgentMetas()[1770892321u] = meta;
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_behaviac_Agent_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// Enemy
			meta = BEHAVIAC_NEW AgentMeta(1424813385u);
			AgentMeta::GetAgentMetas()[4123682269u] = meta;
			meta->RegisterMemberProperty(257823859u, BEHAVIAC_NEW CMemberProperty< int >("enemyType", Set_Enemy_enemyType, Get_Enemy_enemyType));
			meta->RegisterMemberProperty(1002713030u, BEHAVIAC_NEW CMemberProperty< float >("initSpeed", Set_Enemy_initSpeed, Get_Enemy_initSpeed));
			meta->RegisterMemberProperty(552343623u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<float> >("m_init_speed", Set_Enemy_m_init_speed, Get_Enemy_m_init_speed));
			meta->RegisterMemberProperty(755652435u, BEHAVIAC_NEW CMemberArrayItemProperty< float >("m_init_speed[]", Set_Enemy_m_init_speed, Get_Enemy_m_init_speed));
			meta->RegisterMemberProperty(1466300189u, BEHAVIAC_NEW CMemberProperty< float >("randomSpeed", Set_Enemy_randomSpeed, Get_Enemy_randomSpeed));
			meta->RegisterMethod(1360866231u, BEHAVIAC_NEW CAgentMethod< int >(FunctionPointer_Enemy_getEnemyType));
			meta->RegisterMethod(1412217555u, BEHAVIAC_NEW CAgentMethod_1< float, float >(FunctionPointer_Enemy_getRandomSpeedByInitSpeed));
			meta->RegisterMethod(2680090406u, BEHAVIAC_NEW CAgentMethod< float >(FunctionPointer_Enemy_getSpeed));
			meta->RegisterMethod(2156114975u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_Enemy_isAlive));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_Enemy_LogMessage));
			meta->RegisterMethod(1855126619u, BEHAVIAC_NEW CAgentMethodVoid_1<float>(FunctionPointer_Enemy_setSpeed));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			// Hero
			meta = BEHAVIAC_NEW AgentMeta(3351334918u);
			AgentMeta::GetAgentMetas()[4024111892u] = meta;
			meta->RegisterMemberProperty(553786182u, BEHAVIAC_NEW CMemberProperty< bool >("m_isAI", Set_Hero_m_isAI, Get_Hero_m_isAI));
			meta->RegisterMethod(174448843u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_Hero_AdjustHeroPosition));
			meta->RegisterMethod(41533270u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_Hero_EscapeEnemyCrash));
			meta->RegisterMethod(682563429u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_Hero_findAnEnemyAndAttack));
			meta->RegisterMethod(2815222046u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_Hero_findAnNearestEnemy));
			meta->RegisterMethod(4192443002u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_Hero_hasEnemyInFrontCanAttack));
			meta->RegisterMethod(1117465715u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_Hero_isWillBeCrashOnNearestEnemy));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_Hero_LogMessage));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());
			meta->RegisterMethod(3158999171u, BEHAVIAC_NEW CAgentMethod< bool >(FunctionPointer_Hero_wait20Frame));

			// NPC
			meta = BEHAVIAC_NEW AgentMeta(3276013006u);
			AgentMeta::GetAgentMetas()[2341563425u] = meta;
			meta->RegisterMemberProperty(4274124659u, BEHAVIAC_NEW CMemberProperty< behaviac::vector<int> >("delayTime", Set_NPC_delayTime, Get_NPC_delayTime));
			meta->RegisterMemberProperty(3493114628u, BEHAVIAC_NEW CMemberArrayItemProperty< int >("delayTime[]", Set_NPC_delayTime, Get_NPC_delayTime));
			meta->RegisterMemberProperty(113313984u, BEHAVIAC_NEW CMemberProperty< int >("Level1Up_Score", Set_NPC_Level1Up_Score, Get_NPC_Level1Up_Score));
			meta->RegisterMemberProperty(3992368067u, BEHAVIAC_NEW CMemberProperty< int >("Level2Up_Score", Set_NPC_Level2Up_Score, Get_NPC_Level2Up_Score));
			meta->RegisterMemberProperty(37017853u, BEHAVIAC_NEW CMemberProperty< int >("Level3Up_Score", Set_NPC_Level3Up_Score, Get_NPC_Level3Up_Score));
			meta->RegisterMemberProperty(3773350788u, BEHAVIAC_NEW CMemberProperty< int >("Level4Up_Score", Set_NPC_Level4Up_Score, Get_NPC_Level4Up_Score));
			meta->RegisterMemberProperty(364290259u, BEHAVIAC_NEW CMemberProperty< bool >("m_canBossRefresh", Set_NPC_m_canBossRefresh, Get_NPC_m_canBossRefresh));
			meta->RegisterMemberProperty(2100198461u, BEHAVIAC_NEW CMemberProperty< int >("m_level", Set_NPC_m_level, Get_NPC_m_level));
			meta->RegisterMethod(1330329059u, BEHAVIAC_NEW CAgentMethod_1< int, int >(FunctionPointer_NPC_getLevel));
			meta->RegisterMethod(1045109914u, BEHAVIAC_NEW CAgentStaticMethodVoid_1<char*>(FunctionPointer_NPC_LogMessage));
			meta->RegisterMethod(3662936423u, BEHAVIAC_NEW CAgentMethodVoid_2<int, int>(FunctionPointer_NPC_setLeveUpScore));
			meta->RegisterMethod(415097791u, BEHAVIAC_NEW CAgentMethodVoid(FunctionPointer_NPC_spawnEnemy));
			meta->RegisterMethod(2521019022u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorAdd());
			meta->RegisterMethod(2306090221u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorClear());
			meta->RegisterMethod(3483755530u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorContains());
			meta->RegisterMethod(505785840u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorLength());
			meta->RegisterMethod(502968959u, BEHAVIAC_NEW CMethod_behaviac_Agent_VectorRemove());

			AgentMeta::Register<behaviac::Agent>("behaviac::Agent");
			AgentMeta::Register<Enemy>("Enemy");
			AgentMeta::Register<Hero>("Hero");
			AgentMeta::Register<NPC>("NPC");
			AgentMeta::Register<ETest>("ETest");
			AgentMeta::Register<IList>("IList");
			AgentMeta::Register<System::Object>("System::Object");
			AgentMeta::Register<StructTest>("StructTest");

			return true;
		}

		virtual bool unLoad()
		{
			AgentMeta::UnRegister<behaviac::Agent>("behaviac::Agent");
			AgentMeta::UnRegister<Enemy>("Enemy");
			AgentMeta::UnRegister<Hero>("Hero");
			AgentMeta::UnRegister<NPC>("NPC");
			AgentMeta::UnRegister<ETest>("ETest");
			AgentMeta::UnRegister<IList>("IList");
			AgentMeta::UnRegister<System::Object>("System::Object");
			AgentMeta::UnRegister<StructTest>("StructTest");

			return true;
		}
	};

	static BehaviorLoaderImplement _behaviorLoaderImplement_;

	static BehaviorLoaderImplement* _pBehaviorLoader_ = NULL;

	void InitBehaviorLoader()
	{
		_pBehaviorLoader_ = BEHAVIAC_NEW BehaviorLoaderImplement();
	}

	void DestroyBehaviorLoader()
	{
		if (_pBehaviorLoader_)
		{
			BEHAVIAC_DELETE _pBehaviorLoader_;
			_pBehaviorLoader_ = NULL;
		}
	}
}
