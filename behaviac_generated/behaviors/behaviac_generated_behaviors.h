// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// ---------------------------------------------------------------------

#ifndef _BEHAVIAC_GENERATED_BEHAVIORS_H_
#define _BEHAVIAC_GENERATED_BEHAVIORS_H_

#include "../types/behaviac_types.h"

namespace behaviac
{
	// Source file: fish

	class DecoratorAlwaysRunning_bt_fish_node0 : public DecoratorAlwaysRunning
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(DecoratorAlwaysRunning_bt_fish_node0, DecoratorAlwaysRunning);
		DecoratorAlwaysRunning_bt_fish_node0()
		{
			m_bDecorateWhenChildEnds = false;
		}
	protected:
	};

	class Parallel_bt_fish_node1 : public Parallel
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Parallel_bt_fish_node1, Parallel);
		Parallel_bt_fish_node1()
		{
			m_failPolicy = FAIL_ON_ONE;
			m_succeedPolicy = SUCCEED_ON_ALL;
			m_exitPolicy = EXIT_ABORT_RUNNINGSIBLINGS;
			m_childFinishPolicy = CHILDFINISH_LOOP;
		}
	protected:
	};

	class DecoratorAlwaysSuccess_bt_fish_node2 : public DecoratorAlwaysSuccess
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(DecoratorAlwaysSuccess_bt_fish_node2, DecoratorAlwaysSuccess);
		DecoratorAlwaysSuccess_bt_fish_node2()
		{
			m_bDecorateWhenChildEnds = false;
		}
	protected:
	};

	class Parallel_bt_fish_node4 : public Parallel
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Parallel_bt_fish_node4, Parallel);
		Parallel_bt_fish_node4()
		{
			m_failPolicy = FAIL_ON_ONE;
			m_succeedPolicy = SUCCEED_ON_ALL;
			m_exitPolicy = EXIT_ABORT_RUNNINGSIBLINGS;
			m_childFinishPolicy = CHILDFINISH_LOOP;
		}
	protected:
	};

	class Action_bt_fish_node6 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_fish_node6, Action);
		Action_bt_fish_node6()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((PlaneEnemy*)pAgent)->_Execute_Method_<METHOD_TYPE_PlaneEnemy_wander, void >();
			return BT_RUNNING;
		}
	};

	class Wait_bt_fish_node7 : public Wait
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Wait_bt_fish_node7, Wait);
		Wait_bt_fish_node7()
		{
		}
	protected:
		virtual double GetTime(Agent* pAgent) const
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			return 1000;
		}
	};

	class Action_bt_fish_node8 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_fish_node8, Action);
		Action_bt_fish_node8()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((PlaneEnemy*)pAgent)->_Execute_Method_<METHOD_TYPE_PlaneEnemy_updatePosition, void >();
			return BT_RUNNING;
		}
	};

	class Action_bt_fish_node9 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_fish_node9, Action);
		Action_bt_fish_node9()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((PlaneEnemy*)pAgent)->_Execute_Method_<METHOD_TYPE_PlaneEnemy_boundaries, void >();
			return BT_RUNNING;
		}
	};

	class DecoratorAlwaysRunning_bt_fish_node3 : public DecoratorAlwaysRunning
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(DecoratorAlwaysRunning_bt_fish_node3, DecoratorAlwaysRunning);
		DecoratorAlwaysRunning_bt_fish_node3()
		{
			m_bDecorateWhenChildEnds = false;
		}
	protected:
	};

	class Action_bt_fish_node5 : public Action
	{
	public:
		BEHAVIAC_DECLARE_DYNAMIC_TYPE(Action_bt_fish_node5, Action);
		Action_bt_fish_node5()
		{
		}
	protected:
		virtual EBTStatus update_impl(Agent* pAgent, EBTStatus childStatus)
		{
			BEHAVIAC_UNUSED_VAR(pAgent);
			BEHAVIAC_UNUSED_VAR(childStatus);
			((PlaneEnemy*)pAgent)->_Execute_Method_<METHOD_TYPE_PlaneEnemy_avoid, void >();
			return BT_RUNNING;
		}
	};

	class bt_fish
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("fish");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("PlaneEnemy");
#endif
			// children
			{
				DecoratorAlwaysRunning_bt_fish_node0* node0 = BEHAVIAC_NEW DecoratorAlwaysRunning_bt_fish_node0;
				node0->SetClassNameString("DecoratorAlwaysRunning");
				node0->SetId(0);
#if !BEHAVIAC_RELEASE
				node0->SetAgentType("PlaneEnemy");
#endif
				pBT->AddChild(node0);
				{
					Parallel_bt_fish_node1* node1 = BEHAVIAC_NEW Parallel_bt_fish_node1;
					node1->SetClassNameString("Parallel");
					node1->SetId(1);
#if !BEHAVIAC_RELEASE
					node1->SetAgentType("PlaneEnemy");
#endif
					node0->AddChild(node1);
					{
						DecoratorAlwaysSuccess_bt_fish_node2* node2 = BEHAVIAC_NEW DecoratorAlwaysSuccess_bt_fish_node2;
						node2->SetClassNameString("DecoratorAlwaysSuccess");
						node2->SetId(2);
#if !BEHAVIAC_RELEASE
						node2->SetAgentType("PlaneEnemy");
#endif
						node1->AddChild(node2);
						{
							Parallel_bt_fish_node4* node4 = BEHAVIAC_NEW Parallel_bt_fish_node4;
							node4->SetClassNameString("Parallel");
							node4->SetId(4);
#if !BEHAVIAC_RELEASE
							node4->SetAgentType("PlaneEnemy");
#endif
							node2->AddChild(node4);
							{
								Action_bt_fish_node6* node6 = BEHAVIAC_NEW Action_bt_fish_node6;
								node6->SetClassNameString("Action");
								node6->SetId(6);
#if !BEHAVIAC_RELEASE
								node6->SetAgentType("PlaneEnemy");
#endif
								node4->AddChild(node6);
								node4->SetHasEvents(node4->HasEvents() | node6->HasEvents());
							}
							{
								Wait_bt_fish_node7* node7 = BEHAVIAC_NEW Wait_bt_fish_node7;
								node7->SetClassNameString("Wait");
								node7->SetId(7);
#if !BEHAVIAC_RELEASE
								node7->SetAgentType("PlaneEnemy");
#endif
								node4->AddChild(node7);
								node4->SetHasEvents(node4->HasEvents() | node7->HasEvents());
							}
							{
								Action_bt_fish_node8* node8 = BEHAVIAC_NEW Action_bt_fish_node8;
								node8->SetClassNameString("Action");
								node8->SetId(8);
#if !BEHAVIAC_RELEASE
								node8->SetAgentType("PlaneEnemy");
#endif
								node4->AddChild(node8);
								node4->SetHasEvents(node4->HasEvents() | node8->HasEvents());
							}
							{
								Action_bt_fish_node9* node9 = BEHAVIAC_NEW Action_bt_fish_node9;
								node9->SetClassNameString("Action");
								node9->SetId(9);
#if !BEHAVIAC_RELEASE
								node9->SetAgentType("PlaneEnemy");
#endif
								node4->AddChild(node9);
								node4->SetHasEvents(node4->HasEvents() | node9->HasEvents());
							}
							node2->SetHasEvents(node2->HasEvents() | node4->HasEvents());
						}
						node1->SetHasEvents(node1->HasEvents() | node2->HasEvents());
					}
					{
						DecoratorAlwaysRunning_bt_fish_node3* node3 = BEHAVIAC_NEW DecoratorAlwaysRunning_bt_fish_node3;
						node3->SetClassNameString("DecoratorAlwaysRunning");
						node3->SetId(3);
#if !BEHAVIAC_RELEASE
						node3->SetAgentType("PlaneEnemy");
#endif
						node1->AddChild(node3);
						{
							Action_bt_fish_node5* node5 = BEHAVIAC_NEW Action_bt_fish_node5;
							node5->SetClassNameString("Action");
							node5->SetId(5);
#if !BEHAVIAC_RELEASE
							node5->SetAgentType("PlaneEnemy");
#endif
							node3->AddChild(node5);
							node3->SetHasEvents(node3->HasEvents() | node5->HasEvents());
						}
						node1->SetHasEvents(node1->HasEvents() | node3->HasEvents());
					}
					node0->SetHasEvents(node0->HasEvents() | node1->HasEvents());
				}
				pBT->SetHasEvents(pBT->HasEvents() | node0->HasEvents());
			}
			return true;
		}
	};

	// Source file: hero

	class bt_hero
	{
	public:
		static bool Create(BehaviorTree* pBT)
		{
			pBT->SetClassNameString("BehaviorTree");
			pBT->SetId((uint16_t)-1);
			pBT->SetName("hero");
			pBT->SetIsFSM(false);
#if !BEHAVIAC_RELEASE
			pBT->SetAgentType("behaviac::Agent");
#endif
			// children
			{
				Noop* node0 = BEHAVIAC_NEW Noop;
				node0->SetClassNameString("Noop");
				node0->SetId(0);
#if !BEHAVIAC_RELEASE
				node0->SetAgentType("behaviac::Agent");
#endif
				pBT->AddChild(node0);
				pBT->SetHasEvents(pBT->HasEvents() | node0->HasEvents());
			}
			return true;
		}
	};

}
#endif // _BEHAVIAC_GENERATED_BEHAVIORS_H_
